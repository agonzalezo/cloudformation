AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This stack deploy All infrastructure for alex

Parameters:
  InstanceTypeParameter:
    Description: Enter t2.micro just it its free.
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String

Resources:
  webserver01:
    Type: 'AWS::EC2::Instance'
    Properties: 
      ImageId: "ami-0dfcb1ef8550277af"
      KeyName: "netsys"
      InstanceType: !Ref InstanceTypeParameter
      UserData:
        Fn::Base64: |
          #!/bin/bash
          set -u

          echo "Installing Nodejs"
          cd /home/ec2-user
          wget https://nodejs.org/download/release/v16.20.2/node-v16.20.2-linux-x64.tar.xz
          sudo mkdir -p /opt/nodejs/
          sudo mkdir -p /opt/apps/
          sudo chown -R 1000:1000 /opt/nodejs/
          sudo chown -R 1000:1000 /opt/apps/
          tar -xJf node-v16.20.2-linux-x64.tar.xz -C /opt/nodejs/
          sudo ln -s /opt/nodejs/node-v16.20.2-linux-x64/bin/node /usr/bin/node
          sudo ln -s /opt/nodejs/node-v16.20.2-linux-x64/bin/npm /usr/bin/npm

          echo "Installing app versioner"
          cd /opt/apps && wget https://github.com/agonzalezo/versioner/archive/refs/heads/main.zip
          unzip main.zip
          cd versioner-main
          ls -l
          npm install

          echo "Creating service"
          cd /home/ec2-user
          cat > versioner.service  <<EOF
          [Unit]
          Description=Nodejs versioner app
          Documentation=https://github.com/agonzalezo/versioner
          After=network.target

          [Service]
          Type=simple
          User=ec2-user
          WorkingDirectory=/opt/apps/versioner-main
          ExecStartPre=/usr/bin/ls /opt/apps/versioner-main
          ExecStart=/usr/bin/npm start
          Environment=APPVERSION=lx0.0.1
          RestartSec=10
          #Restart=always
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target
          EOF

          sudo mv versioner.service /usr/lib/systemd/system/versioner.service
          sudo systemctl daemon-reload
          sudo systemctl start versioner
          sudo systemctl enable versioner
          systemctl status versioner
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-webserver01
      SecurityGroupIds: 
        - Ref: SecurityGroupSSH
      SubnetId: !Select [ "0", !Split [ "," , Fn::ImportValue: !Sub "${EnvironmentName}-VPCPUBLICSUBNETS" ] ]  


  SecurityGroupSSH:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-securityGroup-public
      GroupDescription: "Security group que permite acceso ssh"
      VpcId: 
        Fn::ImportValue: 
          Fn::Sub: "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 191.92.17.213/32
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 191.92.17.213/32
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0         

Outputs: 
  PublicIP:
    Description: A reference to the created EC2
    Value: !GetAtt webserver01.PublicIp